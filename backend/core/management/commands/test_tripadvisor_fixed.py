# flake8: noqa
import requests
from django.conf import settings
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    help = "Test TripAdvisor Content API v1 with correct location_id = 24938712"

    def handle(self, *args, **options):
        api_key = getattr(settings, "TRIPADVISOR_API_KEY", "")
        location_id = "24938712"  # –í–∞—à –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π location_id

        self.stdout.write("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TRIPADVISOR CONTENT API V1")
        self.stdout.write("=" * 50)
        self.stdout.write(
            f"üîë API Key: {api_key[:10]}..." if api_key else "‚ùå No API key found"
        )
        self.stdout.write(f"üÜî Location ID: {location_id}")

        if not api_key:
            self.stdout.write(self.style.ERROR("‚ùå TripAdvisor API key not configured"))
            return

        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞—Ü–∏–∏
        self.test_location_details(api_key, location_id)

        # –ó–∞—Ç–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã
        self.test_location_reviews(api_key, location_id)

    def test_location_details(self, api_key, location_id):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–∫–∞—Ü–∏–∏"""
        self.stdout.write("\nüìç –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –õ–û–ö–ê–¶–ò–ò:")
        self.stdout.write("-" * 30)

        details_url = (
            f"https://api.content.tripadvisor.com/api/v1/location/{location_id}/details"
        )
        params = {"key": api_key, "language": "en", "currency": "USD"}

        try:
            self.stdout.write(f"üì° –ó–∞–ø—Ä–æ—Å: {details_url}")
            response = requests.get(details_url, params=params, timeout=15)

            self.stdout.write(f"üìä Status Code: {response.status_code}")

            if response.status_code == 200:
                data = response.json()

                name = data.get("name", "N/A")
                description = data.get("description", "N/A")
                location_string = data.get("location_string", "N/A")
                rating = data.get("rating", "N/A")
                num_reviews = data.get("num_reviews", "N/A")

                self.stdout.write(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
                self.stdout.write(f"üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {location_string}")
                self.stdout.write(f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {rating}")
                self.stdout.write(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: {num_reviews}")

                if description and len(description) > 10:
                    self.stdout.write(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description[:100]}...")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                categories = data.get("category", {})
                if categories:
                    self.stdout.write(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {categories.get('name', 'N/A')}")

            else:
                self.stdout.write(
                    self.style.ERROR(f"‚ùå HTTP Error: {response.status_code}")
                )
                self.stdout.write(f"Response: {response.text}")

        except Exception as e:
            self.stdout.write(self.style.ERROR(f"üí• Exception: {str(e)}"))

    def test_location_reviews(self, api_key, location_id):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏"""
        self.stdout.write("\nüìù –û–¢–ó–´–í–´ –û –õ–û–ö–ê–¶–ò–ò:")
        self.stdout.write("-" * 30)

        reviews_url = (
            f"https://api.content.tripadvisor.com/api/v1/location/{location_id}/reviews"
        )
        params = {
            "key": api_key,
            "language": "en",
            "limit": 10,  # –ü–æ–ª—É—á–∞–µ–º –¥–æ 10 –æ—Ç–∑—ã–≤–æ–≤
        }

        try:
            self.stdout.write(f"üì° –ó–∞–ø—Ä–æ—Å: {reviews_url}")
            self.stdout.write(f"üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")

            response = requests.get(reviews_url, params=params, timeout=15)

            self.stdout.write(f"üìä Status Code: {response.status_code}")

            if response.status_code == 200:
                data = response.json()
                reviews = data.get("data", [])

                self.stdout.write(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {len(reviews)}")

                if reviews:
                    self.stdout.write("\nüìã –ü–†–ò–ú–ï–†–´ –û–¢–ó–´–í–û–í:")

                    for i, review in enumerate(reviews[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                        user = review.get("user", {})
                        username = user.get("username", "Anonymous")

                        rating = review.get("rating", "N/A")
                        title = review.get("title", "")
                        text = review.get("text", "")
                        published_date = review.get("published_date", "N/A")

                        self.stdout.write(f"\n{i}. üë§ –ê–≤—Ç–æ—Ä: {username}")
                        self.stdout.write(f"   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {rating}")
                        self.stdout.write(f"   üìÖ –î–∞—Ç–∞: {published_date}")

                        if title:
                            self.stdout.write(f"   üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")

                        if text:
                            preview_text = (
                                text[:150] + "..." if len(text) > 150 else text
                            )
                            self.stdout.write(f"   üí¨ –¢–µ–∫—Å—Ç: {preview_text}")

                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                        if user:
                            user_location = user.get("user_location", {})
                            if user_location:
                                location_name = user_location.get("name", "")
                                if location_name:
                                    self.stdout.write(f"   üåç –û—Ç–∫—É–¥–∞: {location_name}")
                else:
                    self.stdout.write("‚ö†Ô∏è –û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                if reviews:
                    self.stdout.write("\nüîç –°–¢–†–£–ö–¢–£–†–ê –ü–ï–†–í–û–ì–û –û–¢–ó–´–í–ê:")
                    first_review = reviews[0]
                    self.stdout.write(f"–ö–ª—é—á–∏: {list(first_review.keys())}")

                    user_data = first_review.get("user", {})
                    if user_data:
                        self.stdout.write(f"User –∫–ª—é—á–∏: {list(user_data.keys())}")

            else:
                self.stdout.write(
                    self.style.ERROR(f"‚ùå HTTP Error: {response.status_code}")
                )
                self.stdout.write(f"Response: {response.text}")

                # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫
                if response.status_code == 400:
                    self.stdout.write(
                        "üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π location_id –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞"
                    )
                elif response.status_code == 401:
                    self.stdout.write(
                        "üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å"
                    )
                elif response.status_code == 403:
                    self.stdout.write("üí° API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É endpoint")
                elif response.status_code == 429:
                    self.stdout.write("üí° –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

        except Exception as e:
            self.stdout.write(self.style.ERROR(f"üí• Exception: {str(e)}"))

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        self.stdout.write("\n" + "=" * 50)
        self.stdout.write("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        self.stdout.write(
            "1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ API –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Content API v1"
        )
        self.stdout.write("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –≤–∞—à–µ–≥–æ API –ø–ª–∞–Ω–∞")
        self.stdout.write(
            f"3. Location ID {location_id} –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ TripAdvisor"
        )
        self.stdout.write(
            "4. –ï—Å–ª–∏ –æ—Ç–∑—ã–≤–æ–≤ –º–∞–ª–æ, –≤–æ–∑–º–æ–∂–Ω–æ –±–∏–∑–Ω–µ—Å –Ω–æ–≤—ã–π –∏–ª–∏ –º–∞–ª–æ –æ—Ç–∑—ã–≤–æ–≤"
        )
        self.stdout.write("5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å limit –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞")
